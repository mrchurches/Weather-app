{"ast":null,"code":"var _jsxFileName = \"/home/mrx/Escritorio/Weather-app/src/containers/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport Cards from '../components/cards/Cards.jsx';\nimport Nav from '../components/nav/Nav.jsx';\nimport './App.css';\nimport About from '../components/about/About.jsx';\nimport City from '../components/ciudad/City.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n\n  function onSearch(city) {\n    const APIKEY = '37c970517d73d1ae5d149f5bf6616b45';\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${APIKEY}&units=metric`).then(r => r.json()).then(response => {\n      if (response.main !== undefined) {\n        const cityNew = {\n          min: Math.round(response.main.temp_min),\n          max: Math.round(response.main.temp_max),\n          img: response.weather[0].icon,\n          id: response.id,\n          wind: response.wind.speed,\n          temp: response.main.temp,\n          name: response.name,\n          weather: response.weather[0].main,\n          clouds: response.clouds.all,\n          latitud: response.coord.lat,\n          longitud: response.coord.lon\n        };\n        setCities(oldCities => [...oldCities, cityNew]);\n      } else {\n        alert(\"City not found...\");\n      }\n    });\n  }\n\n  function onClose(id) {\n    setCities(old => old.filter(c => c.id !== id));\n  }\n\n  ;\n\n  function onFilter(cityId) {\n    let ciudad = cities.filter(c => c.id === parseInt(cityId));\n\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => /*#__PURE__*/_jsxDEV(Nav, {\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => /*#__PURE__*/_jsxDEV(Cards, {\n          cities: cities,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/city/:cityId\",\n      render: _ref => {\n        let {\n          match\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(City, {\n          city: onFilter(match.params.cityId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Route","Cards","Nav","About","City","App","cities","setCities","onSearch","city","APIKEY","fetch","then","r","json","response","main","undefined","cityNew","min","Math","round","temp_min","max","temp_max","img","weather","icon","id","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","oldCities","alert","onClose","old","filter","c","onFilter","cityId","ciudad","parseInt","length","match","params"],"sources":["/home/mrx/Escritorio/Weather-app/src/containers/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {Route} from 'react-router-dom';\nimport Cards from '../components/cards/Cards.jsx';\nimport Nav from '../components/nav/Nav.jsx';\nimport './App.css';\nimport About from '../components/about/About.jsx';\nimport City from '../components/ciudad/City.jsx';\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n  function onSearch(city) {\n    const APIKEY = '37c970517d73d1ae5d149f5bf6616b45';\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${APIKEY}&units=metric`)\n      .then(r => r.json())\n      .then((response) => {\n        if(response.main !== undefined){\n          const cityNew = {\n            min: Math.round(response.main.temp_min),\n            max: Math.round(response.main.temp_max),\n            img: response.weather[0].icon,\n            id: response.id,\n            wind: response.wind.speed,\n            temp: response.main.temp,\n            name: response.name,\n            weather: response.weather[0].main,\n            clouds: response.clouds.all,\n            latitud: response.coord.lat,\n            longitud: response.coord.lon\n          };\n          setCities(oldCities => [...oldCities, cityNew]);\n        } else {\n          alert(\"City not found...\");\n        }\n      });\n\n    }\n\n  function onClose(id){\n    setCities(old => old.filter(c=> c.id !== id))\n  };\n\n  function onFilter(cityId) {\n    let ciudad = cities.filter(c => c.id === parseInt(cityId));\n    if(ciudad.length > 0) {\n        return ciudad[0];\n    } else {\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Route\n          exact\n          path='/'\n          render={()=> \n          <Nav onSearch = {onSearch}/>} \n        />\n      <Route \n        exact\n        path='/'\n        render={()=>\n        <Cards \n        cities = {cities}\n        onClose={onClose}\n        /> }\n      />\n      </div>\n      <Route\n        exact\n        path='/about'\n        component={About}\n      />\n      <Route\n        path='/city/:cityId'\n        render={({match})=> <City city={onFilter(match.params.cityId)}/>}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}